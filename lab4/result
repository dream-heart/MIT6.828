make clean
make[1]: 正在进入目录 `/home/flh/MIT6.828/lab4'
rm -rf obj .gdbinit jos.in qemu.log
make[1]:正在离开目录 `/home/flh/MIT6.828/lab4'
./grade-lab4 
make[1]: 正在进入目录 `/home/flh/MIT6.828/lab4'
make[1]:正在离开目录 `/home/flh/MIT6.828/lab4'
make[1]: 正在进入目录 `/home/flh/MIT6.828/lab4'
+ as kern/entry.S
+ cc kern/entrypgdir.c
+ cc kern/init.c
+ cc kern/console.c
+ cc kern/monitor.c
+ cc kern/pmap.c
+ cc kern/env.c
+ cc kern/kclock.c
+ cc kern/picirq.c
+ cc kern/printf.c
+ cc kern/trap.c
+ as kern/trapentry.S
+ cc kern/sched.c
+ cc kern/syscall.c
+ cc kern/kdebug.c
+ cc lib/printfmt.c
+ cc lib/readline.c
+ cc lib/string.c
+ as kern/mpentry.S
+ cc kern/mpconfig.c
+ cc kern/lapic.c
+ cc kern/spinlock.c
+ cc[USER] lib/console.c
+ cc[USER] lib/libmain.c
+ cc[USER] lib/exit.c
+ cc[USER] lib/panic.c
+ cc[USER] lib/printf.c
+ cc[USER] lib/printfmt.c
+ cc[USER] lib/readline.c
+ cc[USER] lib/string.c
+ cc[USER] lib/syscall.c
+ cc[USER] lib/pgfault.c
+ as[USER] lib/pfentry.S
+ cc[USER] lib/fork.c
+ cc[USER] lib/ipc.c
+ ar obj/lib/libjos.a
+ cc[USER] user/hello.c
+ as[USER] lib/entry.S
+ ld obj/user/hello
+ cc[USER] user/buggyhello.c
+ ld obj/user/buggyhello
+ cc[USER] user/buggyhello2.c
+ ld obj/user/buggyhello2
+ cc[USER] user/evilhello.c
+ ld obj/user/evilhello
+ cc[USER] user/testbss.c
+ ld obj/user/testbss
+ cc[USER] user/divzero.c
+ ld obj/user/divzero
+ cc[USER] user/breakpoint.c
+ ld obj/user/breakpoint
+ cc[USER] user/softint.c
+ ld obj/user/softint
+ cc[USER] user/badsegment.c
+ ld obj/user/badsegment
+ cc[USER] user/faultread.c
+ ld obj/user/faultread
+ cc[USER] user/faultreadkernel.c
+ ld obj/user/faultreadkernel
+ cc[USER] user/faultwrite.c
+ ld obj/user/faultwrite
+ cc[USER] user/faultwritekernel.c
+ ld obj/user/faultwritekernel
+ cc[USER] user/idle.c
+ ld obj/user/idle
+ cc[USER] user/yield.c
+ ld obj/user/yield
+ cc[USER] user/dumbfork.c
+ ld obj/user/dumbfork
+ cc[USER] user/stresssched.c
+ ld obj/user/stresssched
+ cc[USER] user/faultdie.c
+ ld obj/user/faultdie
+ cc[USER] user/faultregs.c
+ ld obj/user/faultregs
+ cc[USER] user/faultalloc.c
+ ld obj/user/faultalloc
+ cc[USER] user/faultallocbad.c
+ ld obj/user/faultallocbad
+ cc[USER] user/faultnostack.c
+ ld obj/user/faultnostack
+ cc[USER] user/faultbadhandler.c
+ ld obj/user/faultbadhandler
+ cc[USER] user/faultevilhandler.c
+ ld obj/user/faultevilhandler
+ cc[USER] user/forktree.c
+ ld obj/user/forktree
+ cc[USER] user/sendpage.c
+ ld obj/user/sendpage
+ cc[USER] user/spin.c
+ ld obj/user/spin
+ cc[USER] user/fairness.c
+ ld obj/user/fairness
+ cc[USER] user/pingpong.c
+ ld obj/user/pingpong
+ cc[USER] user/pingpongs.c
+ ld obj/user/pingpongs
+ cc[USER] user/primes.c
+ ld obj/user/primes
+ ld obj/kern/kernel
+ as boot/boot.S
+ cc -Os boot/main.c
+ ld boot/boot
+ mk obj/kern/kernel.img
make[1]:正在离开目录 `/home/flh/MIT6.828/lab4'
dumbfork: OK (2.3s) 
Part A score: 5/5

faultread: OK (1.5s) 
faultwrite: OK (1.5s) 
faultdie: OK (1.5s) 
faultregs: OK (1.5s) 
faultalloc: OK (2.3s) 
faultallocbad: OK (1.5s) 
faultnostack: OK (2.0s) 
faultbadhandler: OK (1.4s) 
faultevilhandler: OK (2.0s) 
forktree: OK (1.6s) 
Part B score: 50/50

spin: OK (2.1s) 
stresssched: OK (2.2s) 
sendpage: FAIL (2.1s) 
    ...
         SMP: CPU 1 starting
         cpu_id == 1
    GOOD [00000000] new env 00001000
    GOOD [00001000] new env 00001001
         [00001001] user panic in <unknown> at lib/fork.c:29: The err is not right of the pgfault
         
    ...
           cs   0x----001b
           flag 0x00000292
           esp  0xeebfff68
           ss   0x----0023
         qemu: terminating on signal 15 from pid 5764
    MISSING '1000 got message: hello child environment! how are you?'
    MISSING 'child received correct message'
    MISSING '1001 got message: hello parent environment! I'm good'
    MISSING 'parent received correct message'
    MISSING '.00001000. exiting gracefully'
    MISSING '.00001000. free env 00001000'
    MISSING '.00001001. exiting gracefully'
    MISSING '.00001001. free env 00001001'
    QEMU output saved to jos.out.sendpage
pingpong: FAIL (2.3s) 
    ...
         SMP: CPU 3 starting
         cpu_id == 3
    GOOD [00000000] new env 00001000
    GOOD [00001000] new env 00001001
    GOOD send 0 from 1000 to 1001
    GOOD 1001 got 0 from 1000
    GOOD 1000 got 1 from 1001
         1001 got 2 from 1000
         1000 got 3 from 1001
    ...
         1001 got 6 from 1000
         1000 got 7 from 1001
    GOOD 1001 got 8 from 1000
    GOOD 1000 got 9 from 1001
         1001 got 8 from 1000
    GOOD [00001000] exiting gracefully
    GOOD [00001000] free env 00001000
         [00001001] user panic in <unknown> at lib/ipc.c:76: ipc_send is error
         
    ...
           cs   0x----001b
           flag 0x00000296
           esp  0xeebfdf38
           ss   0x----0023
         qemu: terminating on signal 15 from pid 5869
    MISSING '1001 got 10 from 1000'
    MISSING '.00001001. exiting gracefully'
    MISSING '.00001001. free env 00001001'
    QEMU output saved to jos.out.pingpong
primes: FAIL (2.4s) 
    ...
         SMP: CPU 3 starting
         cpu_id == 3
    GOOD [00000000] new env 00001000
    GOOD [00001000] new env 00001001
    GOOD CPU 0: 2 [00001001] new env 00001002
    GOOD CPU 0: 3 [00001002] new env 00001003
         CPU 3: 0 [00001003] new env 00001004
         TRAP frame at 0xf0295174 from CPU 1
    ...
           esp  0xeebfdf78
           ss   0x----0023
         [00001003] free env 00001003
         [00001002] user panic in <unknown> at lib/ipc.c:76: ipc_send is error
         qemu: terminating on signal 15 from pid 5980
    MISSING 'CPU .: 5 .00001003. new env 00001004'
    MISSING 'CPU .: 7 .00001004. new env 00001005'
    MISSING 'CPU .: 11 .00001005. new env 00001006'
    MISSING 'CPU .: 1877 .00001120. new env 00001121'
    QEMU output saved to jos.out.primes
Part C score: 10/25

Score: 65/80
