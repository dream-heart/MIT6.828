make clean
make[1]: 正在进入目录 `/home/flh/MIT6.828/lab4'
rm -rf obj .gdbinit jos.in qemu.log
make[1]:正在离开目录 `/home/flh/MIT6.828/lab4'
./grade-lab4 
make[1]: 正在进入目录 `/home/flh/MIT6.828/lab4'
make[1]:正在离开目录 `/home/flh/MIT6.828/lab4'
make[1]: 正在进入目录 `/home/flh/MIT6.828/lab4'
+ as kern/entry.S
+ cc kern/entrypgdir.c
+ cc kern/init.c
+ cc kern/console.c
+ cc kern/monitor.c
+ cc kern/pmap.c
+ cc kern/env.c
+ cc kern/kclock.c
+ cc kern/picirq.c
+ cc kern/printf.c
+ cc kern/trap.c
+ as kern/trapentry.S
+ cc kern/sched.c
+ cc kern/syscall.c
+ cc kern/kdebug.c
+ cc lib/printfmt.c
+ cc lib/readline.c
+ cc lib/string.c
+ as kern/mpentry.S
+ cc kern/mpconfig.c
+ cc kern/lapic.c
+ cc kern/spinlock.c
+ cc[USER] lib/console.c
+ cc[USER] lib/libmain.c
+ cc[USER] lib/exit.c
+ cc[USER] lib/panic.c
+ cc[USER] lib/printf.c
+ cc[USER] lib/printfmt.c
+ cc[USER] lib/readline.c
+ cc[USER] lib/string.c
+ cc[USER] lib/syscall.c
+ cc[USER] lib/pgfault.c
+ as[USER] lib/pfentry.S
+ cc[USER] lib/fork.c
+ cc[USER] lib/ipc.c
+ ar obj/lib/libjos.a
+ cc[USER] user/hello.c
+ as[USER] lib/entry.S
+ ld obj/user/hello
+ cc[USER] user/buggyhello.c
+ ld obj/user/buggyhello
+ cc[USER] user/buggyhello2.c
+ ld obj/user/buggyhello2
+ cc[USER] user/evilhello.c
+ ld obj/user/evilhello
+ cc[USER] user/testbss.c
+ ld obj/user/testbss
+ cc[USER] user/divzero.c
+ ld obj/user/divzero
+ cc[USER] user/breakpoint.c
+ ld obj/user/breakpoint
+ cc[USER] user/softint.c
+ ld obj/user/softint
+ cc[USER] user/badsegment.c
+ ld obj/user/badsegment
+ cc[USER] user/faultread.c
+ ld obj/user/faultread
+ cc[USER] user/faultreadkernel.c
+ ld obj/user/faultreadkernel
+ cc[USER] user/faultwrite.c
+ ld obj/user/faultwrite
+ cc[USER] user/faultwritekernel.c
+ ld obj/user/faultwritekernel
+ cc[USER] user/idle.c
+ ld obj/user/idle
+ cc[USER] user/yield.c
+ ld obj/user/yield
+ cc[USER] user/dumbfork.c
+ ld obj/user/dumbfork
+ cc[USER] user/stresssched.c
+ ld obj/user/stresssched
+ cc[USER] user/faultdie.c
+ ld obj/user/faultdie
+ cc[USER] user/faultregs.c
+ ld obj/user/faultregs
+ cc[USER] user/faultalloc.c
+ ld obj/user/faultalloc
+ cc[USER] user/faultallocbad.c
+ ld obj/user/faultallocbad
+ cc[USER] user/faultnostack.c
+ ld obj/user/faultnostack
+ cc[USER] user/faultbadhandler.c
+ ld obj/user/faultbadhandler
+ cc[USER] user/faultevilhandler.c
+ ld obj/user/faultevilhandler
+ cc[USER] user/forktree.c
+ ld obj/user/forktree
+ cc[USER] user/sendpage.c
+ ld obj/user/sendpage
+ cc[USER] user/spin.c
+ ld obj/user/spin
+ cc[USER] user/fairness.c
+ ld obj/user/fairness
+ cc[USER] user/pingpong.c
+ ld obj/user/pingpong
+ cc[USER] user/pingpongs.c
+ ld obj/user/pingpongs
+ cc[USER] user/primes.c
+ ld obj/user/primes
+ ld obj/kern/kernel
+ as boot/boot.S
+ cc -Os boot/main.c
+ ld boot/boot
+ mk obj/kern/kernel.img
make[1]:正在离开目录 `/home/flh/MIT6.828/lab4'
dumbfork: OK (1.6s) 
Part A score: 5/5

faultread: OK (1.3s) 
faultwrite: OK (1.3s) 
faultdie: OK (1.3s) 
faultregs: OK (1.3s) 
faultalloc: OK (2.2s) 
faultallocbad: OK (1.4s) 
faultnostack: OK (1.9s) 
faultbadhandler: OK (2.3s) 
faultevilhandler: OK (2.3s) 
forktree: OK (1.6s) 
Part B score: 50/50

spin: OK (2.1s) 
stresssched: OK (3.0s) 
sendpage: OK (2.4s) 
pingpong: OK (2.1s) 
    (Old jos.out.pingpong failure log removed)
primes: FAIL (1.4s) 
    ...
         SMP: CPU 3 starting
         cpu_id == 3
    GOOD [00000000] new env 00001000
    GOOD [00001000] new env 00001001
    GOOD CPU 0: 2 [00001001] new env 00001002
    GOOD CPU 1: 3 [00001002] new env 00001003
    GOOD CPU 2: 5 [00001003] new env 00001004
         [00001002] user panic in <unknown> at lib/syscall.c:35: syscall 12 returned 12 (> 0)
         qemu: terminating on signal 15 from pid 11205
    MISSING 'CPU .: 7 .00001004. new env 00001005'
    MISSING 'CPU .: 11 .00001005. new env 00001006'
    MISSING 'CPU .: 1877 .00001120. new env 00001121'
    QEMU output saved to jos.out.primes
Part C score: 20/25

Score: 75/80
